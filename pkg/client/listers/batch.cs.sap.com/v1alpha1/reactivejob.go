/*
SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and reactivejob-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/sap/reactivejob-operator/api/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReactiveJobLister helps list ReactiveJobs.
// All objects returned here must be treated as read-only.
type ReactiveJobLister interface {
	// List lists all ReactiveJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReactiveJob, err error)
	// ReactiveJobs returns an object that can list and get ReactiveJobs.
	ReactiveJobs(namespace string) ReactiveJobNamespaceLister
	ReactiveJobListerExpansion
}

// reactiveJobLister implements the ReactiveJobLister interface.
type reactiveJobLister struct {
	indexer cache.Indexer
}

// NewReactiveJobLister returns a new ReactiveJobLister.
func NewReactiveJobLister(indexer cache.Indexer) ReactiveJobLister {
	return &reactiveJobLister{indexer: indexer}
}

// List lists all ReactiveJobs in the indexer.
func (s *reactiveJobLister) List(selector labels.Selector) (ret []*v1alpha1.ReactiveJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReactiveJob))
	})
	return ret, err
}

// ReactiveJobs returns an object that can list and get ReactiveJobs.
func (s *reactiveJobLister) ReactiveJobs(namespace string) ReactiveJobNamespaceLister {
	return reactiveJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReactiveJobNamespaceLister helps list and get ReactiveJobs.
// All objects returned here must be treated as read-only.
type ReactiveJobNamespaceLister interface {
	// List lists all ReactiveJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReactiveJob, err error)
	// Get retrieves the ReactiveJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ReactiveJob, error)
	ReactiveJobNamespaceListerExpansion
}

// reactiveJobNamespaceLister implements the ReactiveJobNamespaceLister
// interface.
type reactiveJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReactiveJobs in the indexer for a given namespace.
func (s reactiveJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReactiveJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReactiveJob))
	})
	return ret, err
}

// Get retrieves the ReactiveJob from the indexer for a given namespace and name.
func (s reactiveJobNamespaceLister) Get(name string) (*v1alpha1.ReactiveJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("reactivejob"), name)
	}
	return obj.(*v1alpha1.ReactiveJob), nil
}
