/*
SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and reactivejob-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/sap/reactivejob-operator/api/v1alpha1"
	batchcssapcomv1alpha1 "github.com/sap/reactivejob-operator/pkg/client/clientset/versioned/typed/batch.cs.sap.com/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeReactivejobs implements ReactiveJobInterface
type fakeReactivejobs struct {
	*gentype.FakeClientWithList[*v1alpha1.ReactiveJob, *v1alpha1.ReactiveJobList]
	Fake *FakeBatchV1alpha1
}

func newFakeReactivejobs(fake *FakeBatchV1alpha1, namespace string) batchcssapcomv1alpha1.ReactiveJobInterface {
	return &fakeReactivejobs{
		gentype.NewFakeClientWithList[*v1alpha1.ReactiveJob, *v1alpha1.ReactiveJobList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("reactivejobs"),
			v1alpha1.SchemeGroupVersion.WithKind("ReactiveJob"),
			func() *v1alpha1.ReactiveJob { return &v1alpha1.ReactiveJob{} },
			func() *v1alpha1.ReactiveJobList { return &v1alpha1.ReactiveJobList{} },
			func(dst, src *v1alpha1.ReactiveJobList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.ReactiveJobList) []*v1alpha1.ReactiveJob {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.ReactiveJobList, items []*v1alpha1.ReactiveJob) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
